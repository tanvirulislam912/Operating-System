#include <stdio.h>

void calculateWT(int n, int BT[], int priority[], int WT[], int process[]);
void calculateTAT(int n, int BT[], int WT[], int TAT[]);
void calculateAT(int n, int BT[], int priority[]);

int main()
{
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    int BT[n], priority[n];
    printf("Enter the burst time and priority for each process:\n");
    for (int i = 0; i < n; i++)
    {
        printf("Process %d : ", i + 1);
        scanf("%d%d", &BT[i], &priority[i]);
    }

    calculateAT(n, BT, priority);

    return 0;
}

void calculateWT(int n, int BT[], int priority[], int WT[], int process[])
{
    for (int i = 0; i < n - 1; i++)
    {
        for (int j = 0; j < n - i - 1; j++)
        {
            if (priority[j] > priority[j + 1])
            {
                 int temp = priority[j];
                priority[j] = priority[j + 1];
                priority[j + 1] = temp;

                 temp = BT[j];
                BT[j] = BT[j + 1];
                BT[j + 1] = temp;



                temp = process[j];
                process[j] = process[j + 1];
                process[j + 1] = temp;
            }
        }
    }

    WT[0] = 0;
    for (int i = 1; i < n; i++)
    {
        WT[i] = BT[i - 1] + WT[i - 1];
    }
}

void calculateTAT(int n, int BT[], int WT[], int TAT[])
{
    for (int i = 0; i < n; i++)
    {
        TAT[i] = BT[i] + WT[i];
    }
}

void calculateAT(int n, int BT[], int priority[])
{
    int process[n], WT[n], TAT[n], TWT = 0, TTAT = 0;

    for (int i = 0; i < n; i++)
    {
        process[i] = i + 1;
    }

    calculateWT(n, BT, priority, WT, process);
    calculateTAT(n, BT, WT, TAT);

    printf("Process\t Burst Time\t Priority\t Waiting Time\t Turnaround Time\n");

    for (int i = 0; i < n; i++)
    {
        TWT = TWT + WT[i];
        TTAT = TTAT + TAT[i];
        printf("%d\t%d\t\t%d\t\t%d\t\t%d\n", process[i], BT[i], priority[i], WT[i], TAT[i]);
    }

    printf("\nAverage waiting time: %.2f", (float)TWT / n);
    printf("\nAverage turnaround time: %.2f", (float)TTAT / n);
}